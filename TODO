 * Add maximum speed configuration, handled the same as position limits
 * If anything limits current, we should probably stop integrating the
   position controller?

 * No guard against running moteus_tool and tview at the same time
 * Limit maximum controllable speed to what the encoder can handle
 * Get drv8323 over-current setting so that it actually works

 * Make test fixture for servos
   * perform actual calibration
   * then connect to a dynamometer of some kind
   * sweep different torques at different speeds
   * measure maximum speed
   * measure maximum stall torque
   * some way of testing side loads and deflection while in motion?

 * test fixtures should have a way to store json formatted test
   results online per-serial number...  semi-standardized way to
   report tests that passed and per-device specific things like plots
   or quality metrics

 * test fixture should verify full power operation and monitor voltage
   ripple to ensure all capacitance operating correctly

 * devkit nice to haves
   * Hard-fault or assert needs to reset the device and latch a fault
   * add tview delays and multi unit features

 * the "fault" state should flash the LEDs in a pattern that is
   distinct from the hard fault state (or I guess the same if
   hard-faults start resetting into a fault state)

 * would be nice if tview could show enum names for fault codes

 * rationalize all the debug tools w.r.t. serial/network/fdcanusb/robot
   * tview based on tplot2

 * design new absolute position sense board

 * Add a "brake" mode that just shorts the terminals all to ground

 * moteus_tool should always command a "tel stop" when doing anything
   other than console operations

 * Make moteus_tool servo auto-detection more robust
   * especially in the face of things spewing
 * Get all mbed ticker stuff out of the link, we never want it used
 * use less power when driver is not active
